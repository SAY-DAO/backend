---
version: '3'

services:

  redis:
    image: redis:6
    restart: always
    volumes:
      - redis_volume:/data

  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB      : ${POSTGRES_DB}
      POSTGRES_USER    : ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    hostname: $RABBITMQ_HOSTNAME
    volumes:
        - rabbitmq_data_volume:/var/lib/rabbitmq/
        - rabbitmq_log_volume:/var/log/rabbitmq/
    environment:
        RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
        RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
        RABBITMQ_DEFAULT_VHOST: $RABBITMQ_HOSTNAME

  backend: &backend
    image: $DOCKER_REGISTRY/say/api:${CI_COMMIT_REF_SLUG}
    restart: always
    networks:
      - staging
      - default
    expose:
      - 5000
    volumes:
      - ./config.json:/app/config.json
      - ./apimd-config.cfg:/app/apimd-config-prod.cfg
      - backend_volume:/app/data
    logging:
      driver: journald
    depends_on:
      - "redis"
      - "db"
      - "rabbitmq"

  worker:
    <<: *backend
    command: celery -A say.api.app.celery worker --concurrency 2 --loglevel=WARNING -B -S redbeat.RedBeatScheduler

volumes:
  redis_volume:
  postgres_volume:
  rabbitmq_data_volume:
  rabbitmq_log_volume:
  backend_volume:

networks:
  staging:
    external: true


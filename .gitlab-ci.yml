stages:
  - build
  - deploy
  - cleanup

build:
  image: docker:latest
  stage: build
  services:
    - name: docker:dind
      alias: docker-service
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - export
    - docker login $DOCKER_REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")
    - export COMPILE_IMAGE_TAG=$(echo "$IMAGE_TAG-compile")
  script:
    - docker pull $COMPILE_IMAGE_TAG || true
    - docker pull $IMAGE_TAG || true
    - docker build --build-arg CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG
      --target compile-image
      --tag $COMPILE_IMAGE_TAG . -f Dockerfile

    - docker build --build-arg CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG
      --tag $IMAGE_TAG . -f Dockerfile

    - docker images
    - docker push $COMPILE_IMAGE_TAG
    - docker push $IMAGE_TAG
  only:
    - branches
    - tags
  tags:
    - build

deploy-branches:
  image: kroniak/ssh-client
  stage: deploy
  services:
    - name: docker:dind
      alias: docker-service
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")
    - export TARGET_DIR=say/$CI_COMMIT_REF_SLUG/api
    - export COMPOSE_PROJECT_NAME=$(echo "$CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAME")

    - mkdir ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$STAGING_SSH_PRIVATE_KEY")

    - ssh $STAGING_USER@$STAGING -p $STAGING_PORT -o StrictHostKeyChecking=no "docker login $DOCKER_REGISTRY -u '$REGISTRY_USER' -p '$REGISTRY_PASSWORD'"
    - ssh $STAGING_USER@$STAGING -p $STAGING_PORT -o StrictHostKeyChecking=no "mkdir -p $TARGET_DIR"
    - scp -P $STAGING_PORT -o StrictHostKeyChecking=no /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/docker-compose-staging.yml $STAGING_USER@$STAGING:$TARGET_DIR/docker-compose.yml
    - scp -P $STAGING_PORT -o StrictHostKeyChecking=no /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/.env_staging $STAGING_USER@$STAGING:$TARGET_DIR/.env
    - scp -P $STAGING_PORT -o StrictHostKeyChecking=no /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/config-staging.json $STAGING_USER@$STAGING:$TARGET_DIR/config.json
  script:
    - ssh $STAGING_USER@$STAGING -p $STAGING_PORT -o StrictHostKeyChecking=no "
        export CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG
        && export COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
        && cd $TARGET_DIR
        && docker-compose pull
        && docker-compose up --remove-orphans -d
      "
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://api.${CI_COMMIT_REF_SLUG}.s.sayapp.company/apidocs
    on_stop: stop_staging

  tags:
    - deploy

stop_staging:
  stage: cleanup
  image: kroniak/ssh-client
  services:
   - name: docker:dind
     alias: docker-service
  variables:
   GIT_STRATEGY: none
   DOCKER_TLS_CERTDIR: ""
   DOCKER_DRIVER: overlay2
  before_script:
   - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
   - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")
   - export TARGET_DIR=say/$CI_COMMIT_REF_SLUG/api
   - export COMPOSE_PROJECT_NAME=$(echo "$CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAME")

   - mkdir ~/.ssh
   - eval $(ssh-agent -s)
   - ssh-add <(echo "$STAGING_SSH_PRIVATE_KEY")

   - ssh $STAGING_USER@$STAGING -p $STAGING_PORT -o StrictHostKeyChecking=no "docker login $DOCKER_REGISTRY -u '$REGISTRY_USER' -p '$REGISTRY_PASSWORD'"
  script:
   - ssh $STAGING_USER@$STAGING -p $STAGING_PORT -o StrictHostKeyChecking=no "
       export CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG
       && export COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
       && cd $TARGET_DIR
       && docker-compose down -v
       && docker rmi -f $IMAGE_TAG
     "
  allow_failure: false
  when: manual
  environment:
   name: $CI_COMMIT_REF_NAME
   action: stop
  tags:
    - cleaner

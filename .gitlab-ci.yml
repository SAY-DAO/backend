
build:
  image: docker:latest
  stage: build
  services:
    - name: docker:dind
      alias: docker-service
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login $DOCKER_REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")
    - export READY_IMAGE_TAG=$(echo "$IMAGE_TAG-ready")
    - export COMPILE_IMAGE_TAG=$(echo "$IMAGE_TAG-compile")
  script:
    - docker pull $COMPILE_IMAGE_TAG || true
    - docker pull $READY_IMAGE_TAG || true
    - docker pull $IMAGE_TAG || true
    - docker build --target compile-image --cache-from=$COMPILE_IMAGE_TAG --tag $COMPILE_IMAGE_TAG . -f Dockerfile
    - docker build --target ready-image --cache-from=$COMPILE_IMAGE_TAG --tag $READY_IMAGE_TAG . -f Dockerfile
    - docker build --target runtime-image --cache-from $COMPILE_IMAGE_TAG --tag $READY_IMAGE_TAG --cache-from $IMAGE_NAME -t $IMAGE_TAG . -f Dockerfile
    - docker push $COMPILE_IMAGE_TAG
    - docker push $READY_IMAGE_TAG
    - docker push $IMAGE_TAG
  only:
    - branches
    - tags
  tags:
    - build

deploy-branches:
  image: kroniak/ssh-client
  stage: deploy
  services:
    - name: docker:dind
      alias: docker-service
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")

    - mkdir ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")

  script:
    - ssh $SERVER_USER@$SERVER "docker login $DOCKER_REGISTRY -u '$REGISTRY_USER' -p '$REGISTRY_PASSWORD'"
    - ssh $SERVER_USER@$SERVER "cd /home/server/say-installer && docker pull $IMAGE_TAG && docker-compose up --remove-orphans -d"

  only:
    - develop
  # except:
    - master
  tags:
    - deploy

# stop_staging:
#   stage: deploy
#   variables:
#     GIT_STRATEGY: none
#   script:
#     # add the server as a known host
#     - mkdir ~/.ssh
#     - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#     # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
#     - eval $(ssh-agent -s)
#     - ssh-add <(echo "$SSH_PRIVATE_KEY")
#     # log into Docker registry
#     - ssh deployer@thecodingmachine.io "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.thecodingmachine.com"
#     # stop container, remove image.
#     - ssh deployer@thecodingmachine.io "docker stop thecodingmachine.io_${CI_COMMIT_REF_SLUG}" || true
#     - ssh deployer@thecodingmachine.io "docker rm thecodingmachine.io_${CI_COMMIT_REF_SLUG}" || true
#     - ssh deployer@thecodingmachine.io "docker rmi registry.thecodingmachine.com/tcm-projects/thecodingmachine.io:${CI_COMMIT_REF_SLUG}" || true
#   when: manual
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     action: stop
#   only:
#     - branches
#   except:
#     - master
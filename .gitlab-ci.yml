build:
  image: docker:latest
  stage: build
  services:
    - name: docker:dind
      alias: docker-service
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - export
    - docker login $DOCKER_REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
    - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")
    - export COMPILE_IMAGE_TAG=$(echo "$IMAGE_TAG-compile")
  script:
    - docker pull $COMPILE_IMAGE_TAG || true
    - docker pull $IMAGE_TAG || true
    - docker build --target compile-image --tag $COMPILE_IMAGE_TAG . -f Dockerfile
    - docker build --tag $IMAGE_TAG . -f Dockerfile
    - docker images
    - docker push $COMPILE_IMAGE_TAG
    - docker push $IMAGE_TAG
  only:
    - branches
    - tags
  tags:
    - build

deploy-branches:
  image: kroniak/ssh-client
  stage: deploy
  services:
    - name: docker:dind
      alias: docker-service
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - export IMAGE_NAME=$(echo "$DOCKER_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export IMAGE_TAG=$(echo "$IMAGE_NAME:$CI_COMMIT_REF_SLUG")
    - export TARGET_DIR=say/$CI_COMMIT_REF_SLUG/api
    - export COMPOSE_PROJECT_NAME=$CI_PROJECT_NAMESPACE_$CI_PROJECT_NAME
    - mkdir ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$STAGING_SSH_PRIVATE_KEY")
  script:
    - ssh $STAGING_USER@$STAGING "docker login $DOCKER_REGISTRY -u '$REGISTRY_USER' -p '$REGISTRY_PASSWORD'"
    - ssh $STAGING_USER@$STAGING "mkdir -p $TARGET_DIR"
    - scp /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/docker-compose-staging.yml $STAGING_USER@$STAGING:$TARGET_DIR/docker-compose.yml"
    - ssh $STAGING_USER@$STAGING "cd $TARGET_DIR && docker-compose pull && COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME docker-compose up --remove-orphans -d"
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://${CI_COMMIT_REF_NAME}.api.staging.sayapp.company
#  only:
#    - develop
#   except:
#    - master
  tags:
    - deploy

# stop_staging:
#   stage: deploy
#   variables:
#     GIT_STRATEGY: none
#   script:
#     # add the server as a known host
#     - mkdir ~/.ssh
#     - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#     # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
#     - eval $(ssh-agent -s)
#     - ssh-add <(echo "$SSH_PRIVATE_KEY")
#     # log into Docker registry
#     - ssh deployer@thecodingmachine.io "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.thecodingmachine.com"
#     # stop container, remove image.
#     - ssh deployer@thecodingmachine.io "docker stop thecodingmachine.io_${CI_COMMIT_REF_SLUG}" || true
#     - ssh deployer@thecodingmachine.io "docker rm thecodingmachine.io_${CI_COMMIT_REF_SLUG}" || true
#     - ssh deployer@thecodingmachine.io "docker rmi registry.thecodingmachine.com/tcm-projects/thecodingmachine.io:${CI_COMMIT_REF_SLUG}" || true
#   when: manual
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     action: stop
#   only:
#     - branches
#   except:
#     - master

"""empty message

Revision ID: 33e4624b36d6
Revises: 04d163651950
Create Date: 2020-01-11 18:39:32.378961

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op


# revision identifiers, used by Alembic.
revision = '33e4624b36d6'
down_revision = '04d163651950'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('activity', sa.Column('created', sa.DateTime()))
    op.add_column('activity', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE activity set created = created_at;
    ''')
    op.execute('''
        UPDATE activity set updated = '2019-11-10 7:0:0';
    ''')
    op.drop_column('activity', 'created_at')

    op.add_column('child', sa.Column('created', sa.DateTime()))
    op.add_column('child', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE child set created = "createdAt";
    ''')
    op.execute('''
        UPDATE child set updated = "lastUpdate";
    ''')
    op.drop_column('child', 'createdAt')
    op.drop_column('child', 'lastUpdate')

    op.add_column('child_need', sa.Column('created', sa.DateTime()))
    op.add_column('child_need', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE child_need set created = '2019-11-10 7:0:0';
    ''')
    op.execute('''
        UPDATE child_need set updated = '2019-11-10 7:0:0';
    ''')

    op.add_column('family', sa.Column('created', sa.DateTime()))
    op.add_column('family', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE family set created = '2019-11-10 7:0:0';
    ''')
    op.execute('''
        UPDATE family set updated = '2019-11-10 7:0:0';
    ''')

    op.add_column('need', sa.Column('created', sa.DateTime()))
    op.add_column('need', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE need set created = "createdAt";
    ''')
    op.execute('''
        UPDATE need set updated = "lastUpdate";
    ''')
    op.drop_column('need', 'createdAt')
    op.drop_column('need', 'lastUpdate')

    op.add_column('need_family', sa.Column('created', sa.DateTime()))
    op.add_column('need_family', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE need_family set created = '2019-11-10 7:0:0';
    ''')
    op.execute('''
        UPDATE need_family set updated = '2019-11-10 7:0:0';
    ''')

    op.add_column('ngo', sa.Column('created', sa.DateTime()))
    op.add_column('ngo', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE ngo set created = '2019-10-10 7:0:0';
    ''')
    op.execute('''
        UPDATE ngo set updated = "lastUpdateDate";
    ''')
    op.drop_column('ngo', 'lastUpdateDate')

    op.add_column('payment', sa.Column('created', sa.DateTime()))
    op.add_column('payment', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE payment set created = "createdAt";
    ''')
    op.execute('''
        UPDATE payment set updated = "createdAt";
    ''')
    op.drop_column('payment', 'createdAt')

    op.add_column('social_worker', sa.Column('created', sa.DateTime()))
    op.add_column('social_worker', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE social_worker set created = '2019-10-10 7:0:0';
    ''')
    op.execute('''
        UPDATE social_worker set updated = "lastUpdateDate";
    ''')
    op.drop_column('social_worker', 'lastUpdateDate')

    op.add_column('social_worker_type', sa.Column('created', sa.DateTime()))
    op.add_column('social_worker_type', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE social_worker_type set created = '2019-10-10 7:0:0';
    ''')
    op.execute('''
        UPDATE social_worker_type set updated = '2019-10-10 7:0:0';
    ''')

    op.add_column('user', sa.Column('created', sa.DateTime()))
    op.add_column('user', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE "user" set created = "createdAt";
    ''')
    op.execute('''
        UPDATE "user" set updated = "lastUpdate";
    ''')
    op.drop_column('user', 'createdAt')
    op.drop_column('user', 'lastUpdate')
    
    op.add_column('user_family', sa.Column('created', sa.DateTime()))
    op.add_column('user_family', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE user_family set created = '2019-11-11 7:0:0';
    ''')
    op.execute('''
        UPDATE user_family set updated = '2019-11-11 7:0:0';
    ''')

    op.add_column('verify', sa.Column('created', sa.DateTime()))
    op.add_column('verify', sa.Column('updated', sa.DateTime()))
    op.execute('''
        UPDATE verify set created = '2019-11-11 7:0:0';
    ''')
    op.execute('''
        UPDATE verify set updated = '2019-11-11 7:0:0';
    ''')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('verify', 'updated')
    op.drop_column('verify', 'created')
    op.drop_column('user_family', 'updated')
    op.drop_column('user_family', 'created')
    op.add_column('user', sa.Column('lastUpdate', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('createdAt', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_column('user', 'updated')
    op.drop_column('user', 'created')
    op.drop_column('social_worker_type', 'updated')
    op.drop_column('social_worker_type', 'created')
    op.add_column('social_worker', sa.Column('lastUpdateDate', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_column('social_worker', 'updated')
    op.drop_column('social_worker', 'created')
    op.add_column('payment', sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_column('payment', 'updated')
    op.drop_column('payment', 'created')
    op.add_column('ngo', sa.Column('lastUpdateDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('ngo', 'updated')
    op.drop_column('ngo', 'created')
    op.drop_column('need_family', 'updated')
    op.drop_column('need_family', 'created')
    op.add_column('need', sa.Column('lastUpdate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('need', sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_column('need', 'updated')
    op.drop_column('need', 'created')
    op.drop_column('family', 'updated')
    op.drop_column('family', 'created')
    op.drop_column('child_need', 'updated')
    op.drop_column('child_need', 'created')
    op.add_column('child', sa.Column('lastUpdate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('child', sa.Column('createdAt', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_column('child', 'updated')
    op.drop_column('child', 'created')
    op.add_column('activity', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_column('activity', 'updated')
    op.drop_column('activity', 'created')
    # ### end Alembic commands ###

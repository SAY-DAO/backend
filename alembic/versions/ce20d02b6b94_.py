"""empty message

Revision ID: ce20d02b6b94
Revises: 0297edf6ad0b
Create Date: 2022-04-05 17:22:37.704312

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce20d02b6b94'
down_revision = '0297edf6ad0b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.Column('iso3', sa.Unicode(length=3), nullable=True),
    sa.Column('numeric_code', sa.Unicode(length=3), nullable=True),
    sa.Column('iso2', sa.Unicode(length=4), nullable=True),
    sa.Column('phonecode', sa.Unicode(length=255), nullable=True),
    sa.Column('capital', sa.Unicode(length=255), nullable=True),
    sa.Column('currency', sa.Unicode(length=255), nullable=True),
    sa.Column('currency_name', sa.Unicode(length=255), nullable=True),
    sa.Column('currency_symbol', sa.Unicode(length=255), nullable=True),
    sa.Column('tld', sa.Unicode(length=255), nullable=True),
    sa.Column('native', sa.Unicode(length=255), nullable=True),
    sa.Column('region', sa.Unicode(length=255), nullable=True),
    sa.Column('subregion', sa.Unicode(length=255), nullable=True),
    sa.Column('timezones', sa.UnicodeText(), nullable=True),
    sa.Column('translations', sa.UnicodeText(), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('emoji', sa.Unicode(length=191), nullable=True),
    sa.Column('emojiU', sa.Unicode(length=191), nullable=True),
    sa.Column('flag', sa.SmallInteger(), nullable=True),
    sa.Column('wikiDataId', sa.Unicode(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('countries_pkey'))
    )
    op.create_table('states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=256), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('country_code', sa.Unicode(length=2), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=False),
    sa.Column('iso2', sa.Unicode(length=255), nullable=True),
    sa.Column('fips_code', sa.Unicode(length=255), nullable=True),
    sa.Column('type', sa.Unicode(length=191), nullable=True),
    sa.Column('flag_code', sa.Unicode(length=255), nullable=True),
    sa.Column('flag', sa.SmallInteger(), nullable=False),
    sa.Column('wikiDataId', sa.Unicode(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name=op.f('states_country_id_countries_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('states_pkey'))
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=256), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.Column('state_code', sa.Unicode(length=255), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('country_code', sa.Unicode(length=2), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=False),
    sa.Column('flag', sa.SmallInteger(), nullable=False),
    sa.Column('wikiDataId', sa.Unicode(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name=op.f('cities_country_id_countries_fkey')),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], name=op.f('cities_state_id_states_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('cities_pkey'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cities')
    op.drop_table('states')
    op.drop_table('countries')
    # ### end Alembic commands ###

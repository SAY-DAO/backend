"""empty message

Revision ID: 85df3eb096d5
Revises: fe214bd981c5
Create Date: 2021-06-11 02:46:50.047452

"""
import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision = '85df3eb096d5'
down_revision = 'fe214bd981c5'
branch_labels = None
depends_on = None


def create_cart_for_users():
    from say.models import Cart
    from say.models import User
    from say.orm import init_model
    from say.orm import session

    init_model(op.get_bind())

    for user in session.query(User):
        session.add(Cart(user=user))

    session.commit()


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'carts',
        sa.Column('created', sa.DateTime(), nullable=False),
        sa.Column('updated', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'], ['user.id'], name=op.f('carts_user_id_user_fkey')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('carts_pkey')),
        sa.UniqueConstraint('user_id', name=op.f('carts_user_id_key')),
    )
    op.create_table(
        'cart_payments',
        sa.Column('created', sa.DateTime(), nullable=False),
        sa.Column('updated', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('cart_id', sa.Integer(), nullable=True),
        sa.Column('order_id', sa.String(), nullable=True),
        sa.Column('bank_amount', sa.Integer(), nullable=True),
        sa.Column('credit_amount', sa.Integer(), nullable=True),
        sa.Column('donation_amount', sa.Integer(), nullable=True),
        sa.Column('needs_amount', sa.Integer(), nullable=True),
        sa.Column('total_amount', sa.Integer(), nullable=True),
        sa.Column('gateway_payment_id', sa.String(), nullable=True),
        sa.Column('gateway_track_id', sa.String(), nullable=True),
        sa.Column('link', sa.String(), nullable=True),
        sa.Column('verified', sa.DateTime(), nullable=True),
        sa.Column('hashed_card_no', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ['cart_id'], ['carts.id'], name=op.f('cart_payments_cart_id_carts_fkey')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('cart_payments_pkey')),
        sa.UniqueConstraint('order_id', name=op.f('cart_payments_order_id_key')),
    )
    op.create_index(
        op.f('cart_payments_cart_id_idx'), 'cart_payments', ['cart_id'], unique=False
    )
    op.create_index(
        op.f('cart_payments_gateway_payment_id_idx'),
        'cart_payments',
        ['gateway_payment_id'],
        unique=False,
    )
    op.create_index(
        op.f('cart_payments_gateway_track_id_idx'),
        'cart_payments',
        ['gateway_track_id'],
        unique=False,
    )
    op.create_table(
        'cart_needs',
        sa.Column('updated', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('cart_id', sa.Integer(), nullable=False),
        sa.Column('need_id', sa.Integer(), nullable=False),
        sa.Column('created', sa.DateTime(), nullable=False),
        sa.Column('deleted', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ['cart_id'], ['carts.id'], name=op.f('cart_needs_cart_id_carts_fkey')
        ),
        sa.ForeignKeyConstraint(
            ['need_id'], ['need.id'], name=op.f('cart_needs_need_id_need_fkey')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('cart_needs_pkey')),
    )
    op.create_index(
        op.f('cart_needs_cart_id_idx'), 'cart_needs', ['cart_id'], unique=False
    )
    op.create_index(
        op.f('cart_needs_need_id_idx'), 'cart_needs', ['need_id'], unique=False
    )
    op.add_column('payment', sa.Column('cart_payment_id', sa.Integer(), nullable=True))
    op.create_index(
        op.f('payment_cart_payment_id_idx'),
        'payment',
        ['cart_payment_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_gateway_payment_id_idx'),
        'payment',
        ['gateway_payment_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_gateway_track_id_idx'),
        'payment',
        ['gateway_track_id'],
        unique=False,
    )
    op.create_index(op.f('payment_order_id_idx'), 'payment', ['order_id'], unique=False)
    op.drop_constraint('payment_order_id_key', 'payment', type_='unique')
    op.create_foreign_key(
        op.f('payment_cart_payment_id_cart_payments_fkey'),
        'payment',
        'cart_payments',
        ['cart_payment_id'],
        ['id'],
    )
    op.drop_column('payment', 'use_credit')
    create_cart_for_users()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'payment',
        sa.Column(
            'use_credit',
            sa.BOOLEAN(),
            server_default=sa.text('false'),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(
        op.f('payment_cart_payment_id_cart_payments_fkey'),
        'payment',
        type_='foreignkey',
    )
    op.create_unique_constraint('payment_order_id_key', 'payment', ['order_id'])
    op.drop_index(op.f('payment_order_id_idx'), table_name='payment')
    op.drop_index(op.f('payment_gateway_track_id_idx'), table_name='payment')
    op.drop_index(op.f('payment_gateway_payment_id_idx'), table_name='payment')
    op.drop_index(op.f('payment_cart_payment_id_idx'), table_name='payment')
    op.drop_column('payment', 'cart_payment_id')
    op.drop_index(op.f('cart_needs_need_id_idx'), table_name='cart_needs')
    op.drop_index(op.f('cart_needs_cart_id_idx'), table_name='cart_needs')
    op.drop_table('cart_needs')
    op.drop_index(
        op.f('cart_payments_gateway_track_id_idx'), table_name='cart_payments'
    )
    op.drop_index(
        op.f('cart_payments_gateway_payment_id_idx'), table_name='cart_payments'
    )
    op.drop_index(op.f('cart_payments_cart_id_idx'), table_name='cart_payments')
    op.drop_table('cart_payments')
    op.drop_table('carts')
    # ### end Alembic commands ###

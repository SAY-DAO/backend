"""empty message

Revision ID: 812ee5e3331c
Revises: c24e93487fbf
Create Date: 2022-05-29 18:20:32.542315

"""
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

import say
from alembic import op


# revision identifiers, used by Alembic.
revision = '812ee5e3331c'
down_revision = 'c24e93487fbf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'cart_payments_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('cart_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('order_id', sa.String(), autoincrement=False, nullable=True),
        sa.Column('bank_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('credit_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('donation_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('needs_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('total_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('gateway_payment_id', sa.String(), autoincrement=False, nullable=True),
        sa.Column('gateway_track_id', sa.String(), autoincrement=False, nullable=True),
        sa.Column('link', sa.String(), autoincrement=False, nullable=True),
        sa.Column('transaction_date', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('verified', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('card_no', sa.String(), autoincrement=False, nullable=True),
        sa.Column('hashed_card_no', sa.String(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('cart_payments_version_pkey')
        ),
    )
    op.create_index(
        op.f('cart_payments_version_cart_id_idx'),
        'cart_payments_version',
        ['cart_id'],
        unique=False,
    )
    op.create_index(
        op.f('cart_payments_version_end_transaction_id_idx'),
        'cart_payments_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('cart_payments_version_gateway_payment_id_idx'),
        'cart_payments_version',
        ['gateway_payment_id'],
        unique=False,
    )
    op.create_index(
        op.f('cart_payments_version_gateway_track_id_idx'),
        'cart_payments_version',
        ['gateway_track_id'],
        unique=False,
    )
    op.create_index(
        op.f('cart_payments_version_operation_type_idx'),
        'cart_payments_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('cart_payments_version_transaction_id_idx'),
        'cart_payments_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'family_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('id_child', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('isDeleted', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('family_version_pkey')),
    )
    op.create_index(
        op.f('family_version_end_transaction_id_idx'),
        'family_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('family_version_operation_type_idx'),
        'family_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('family_version_transaction_id_idx'),
        'family_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'invitations_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('inviter_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('family_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('role', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('text', sa.Unicode(length=128), autoincrement=False, nullable=True),
        sa.Column('token', sa.Unicode(length=512), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('invitations_version_pkey')
        ),
    )
    op.create_index(
        op.f('invitations_version_end_transaction_id_idx'),
        'invitations_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('invitations_version_family_id_idx'),
        'invitations_version',
        ['family_id'],
        unique=False,
    )
    op.create_index(
        op.f('invitations_version_inviter_id_idx'),
        'invitations_version',
        ['inviter_id'],
        unique=False,
    )
    op.create_index(
        op.f('invitations_version_operation_type_idx'),
        'invitations_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('invitations_version_token_idx'),
        'invitations_version',
        ['token'],
        unique=False,
    )
    op.create_index(
        op.f('invitations_version_transaction_id_idx'),
        'invitations_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'need_family_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('id_family', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('id_user', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('id_need', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('isDeleted', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('type', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('user_role', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('address', sa.Unicode(length=64), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('need_family_version_pkey')
        ),
    )
    op.create_index(
        op.f('need_family_version_end_transaction_id_idx'),
        'need_family_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('need_family_version_id_family_idx'),
        'need_family_version',
        ['id_family'],
        unique=False,
    )
    op.create_index(
        op.f('need_family_version_id_need_idx'),
        'need_family_version',
        ['id_need'],
        unique=False,
    )
    op.create_index(
        op.f('need_family_version_id_user_idx'),
        'need_family_version',
        ['id_user'],
        unique=False,
    )
    op.create_index(
        op.f('need_family_version_isDeleted_idx'),
        'need_family_version',
        ['isDeleted'],
        unique=False,
    )
    op.create_index(
        op.f('need_family_version_operation_type_idx'),
        'need_family_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('need_family_version_transaction_id_idx'),
        'need_family_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'need_receipt_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('need_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('sw_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('receipt_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('deleted', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('need_receipt_version_pkey')
        ),
    )
    op.create_index(
        op.f('need_receipt_version_end_transaction_id_idx'),
        'need_receipt_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('need_receipt_version_need_id_idx'),
        'need_receipt_version',
        ['need_id'],
        unique=False,
    )
    op.create_index(
        op.f('need_receipt_version_operation_type_idx'),
        'need_receipt_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('need_receipt_version_receipt_id_idx'),
        'need_receipt_version',
        ['receipt_id'],
        unique=False,
    )
    op.create_index(
        op.f('need_receipt_version_sw_id_idx'),
        'need_receipt_version',
        ['sw_id'],
        unique=False,
    )
    op.create_index(
        op.f('need_receipt_version_transaction_id_idx'),
        'need_receipt_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'need_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('child_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('created_by_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column(
            'name_translations',
            postgresql.HSTORE(text_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            'description_translations',
            postgresql.HSTORE(text_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            'imageUrl',
            say.orm.types.ResourceURL,
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('category', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('isUrgent', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('details', sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            'informations', sa.String(length=1024), autoincrement=False, nullable=True
        ),
        sa.Column('_cost', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('purchase_cost', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('link', sa.String(), autoincrement=False, nullable=True),
        sa.Column('affiliateLinkUrl', sa.String(), autoincrement=False, nullable=True),
        sa.Column('isDeleted', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('receipts', sa.String(), autoincrement=False, nullable=True),
        sa.Column('isConfirmed', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('confirmUser', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('type', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('doing_duration', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('status', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('status_updated_at', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('isReported', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('img', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('title', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('oncePurchased', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column(
            'bank_track_id', sa.Unicode(length=30), autoincrement=False, nullable=True
        ),
        sa.Column('unavailable_from', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('doneAt', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('purchase_date', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('dkc', sa.String(length=20), autoincrement=False, nullable=True),
        sa.Column(
            'expected_delivery_date', sa.DateTime(), autoincrement=False, nullable=True
        ),
        sa.Column('ngo_delivery_date', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column(
            'child_delivery_date', sa.DateTime(), autoincrement=False, nullable=True
        ),
        sa.Column('confirmDate', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('deleted_at', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('unconfirmed_at', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('need_version_pkey')),
    )
    op.create_index(
        op.f('need_version_child_id_idx'), 'need_version', ['child_id'], unique=False
    )
    op.create_index(
        op.f('need_version_end_transaction_id_idx'),
        'need_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('need_version_isConfirmed_idx'),
        'need_version',
        ['isConfirmed'],
        unique=False,
    )
    op.create_index(
        op.f('need_version_isDeleted_idx'), 'need_version', ['isDeleted'], unique=False
    )
    op.create_index(
        op.f('need_version_isReported_idx'), 'need_version', ['isReported'], unique=False
    )
    op.create_index(
        op.f('need_version_oncePurchased_idx'),
        'need_version',
        ['oncePurchased'],
        unique=False,
    )
    op.create_index(
        op.f('need_version_operation_type_idx'),
        'need_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('need_version_status_idx'), 'need_version', ['status'], unique=False
    )
    op.create_index(
        op.f('need_version_transaction_id_idx'),
        'need_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_index(op.f('need_version_type_idx'), 'need_version', ['type'], unique=False)
    op.create_table(
        'ngo_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('city_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('name', sa.String(), autoincrement=False, nullable=True),
        sa.Column('postalAddress', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('emailAddress', sa.String(), autoincrement=False, nullable=True),
        sa.Column('phoneNumber', sa.String(), autoincrement=False, nullable=True),
        sa.Column('website', sa.String(), autoincrement=False, nullable=True),
        sa.Column(
            'logoUrl',
            say.orm.types.ResourceURL,
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('balance', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('registerDate', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('isActive', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('isDeleted', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('ngo_version_pkey')),
    )
    op.create_index(
        op.f('ngo_version_end_transaction_id_idx'),
        'ngo_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('ngo_version_operation_type_idx'),
        'ngo_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('ngo_version_transaction_id_idx'),
        'ngo_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'payment_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('id_need', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('id_user', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('cart_payment_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('gateway_payment_id', sa.String(), autoincrement=False, nullable=True),
        sa.Column('gateway_track_id', sa.String(), autoincrement=False, nullable=True),
        sa.Column('link', sa.String(), autoincrement=False, nullable=True),
        sa.Column('order_id', sa.String(), autoincrement=False, nullable=True),
        sa.Column('desc', sa.String(), autoincrement=False, nullable=True),
        sa.Column('card_no', sa.String(), autoincrement=False, nullable=True),
        sa.Column('hashed_card_no', sa.String(), autoincrement=False, nullable=True),
        sa.Column('transaction_date', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('verified', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('is_nakama', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('need_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('credit_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('donation_amount', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('payment_version_pkey')
        ),
    )
    op.create_index(
        op.f('payment_version_cart_payment_id_idx'),
        'payment_version',
        ['cart_payment_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_end_transaction_id_idx'),
        'payment_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_gateway_payment_id_idx'),
        'payment_version',
        ['gateway_payment_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_gateway_track_id_idx'),
        'payment_version',
        ['gateway_track_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_id_need_idx'), 'payment_version', ['id_need'], unique=False
    )
    op.create_index(
        op.f('payment_version_id_user_idx'), 'payment_version', ['id_user'], unique=False
    )
    op.create_index(
        op.f('payment_version_operation_type_idx'),
        'payment_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_order_id_idx'),
        'payment_version',
        ['order_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_transaction_id_idx'),
        'payment_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('payment_version_verified_idx'),
        'payment_version',
        ['verified'],
        unique=False,
    )
    op.create_table(
        'receipt_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('owner_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column(
            'attachment', sa.Unicode(length=256), autoincrement=False, nullable=True
        ),
        sa.Column('code', sa.Unicode(length=128), autoincrement=False, nullable=True),
        sa.Column('deleted', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column(
            'description', sa.Unicode(length=1024), autoincrement=False, nullable=True
        ),
        sa.Column('title', sa.Unicode(length=128), autoincrement=False, nullable=True),
        sa.Column('is_public', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('need_status', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('receipt_version_pkey')
        ),
    )
    op.create_index(
        op.f('receipt_version_code_idx'), 'receipt_version', ['code'], unique=False
    )
    op.create_index(
        op.f('receipt_version_end_transaction_id_idx'),
        'receipt_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('receipt_version_operation_type_idx'),
        'receipt_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('receipt_version_owner_id_idx'),
        'receipt_version',
        ['owner_id'],
        unique=False,
    )
    op.create_index(
        op.f('receipt_version_transaction_id_idx'),
        'receipt_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'user_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('firstName', sa.String(), autoincrement=False, nullable=True),
        sa.Column('lastName', sa.String(), autoincrement=False, nullable=True),
        sa.Column('userName', sa.String(), autoincrement=False, nullable=True),
        sa.Column(
            'avatarUrl', say.orm.types.LocalFile(), autoincrement=False, nullable=True
        ),
        sa.Column(
            'phone_number',
            sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            'country',
            sqlalchemy_utils.types.country.CountryType(length=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('city', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('postal_address', sa.Text(), autoincrement=False, nullable=True),
        sa.Column(
            'postal_code', sa.Unicode(length=10), autoincrement=False, nullable=True
        ),
        sa.Column('emailAddress', sa.String(), autoincrement=False, nullable=True),
        sa.Column(
            'gender',
            sa.Enum('female', 'male', 'other', name='gender'),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('isDeleted', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('is_email_verified', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column(
            'is_phonenumber_verified', sa.Boolean(), autoincrement=False, nullable=True
        ),
        sa.Column('birthDate', sa.Date(), autoincrement=False, nullable=True),
        sa.Column('birthPlace', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('lastLogin', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('_password', sa.String(), autoincrement=False, nullable=True),
        sa.Column(
            'locale',
            sqlalchemy_utils.types.locale.LocaleType,
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('is_installed', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('is_nakama', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('receive_email', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('user_version_pkey')),
    )
    op.create_index(
        op.f('user_version_emailAddress_idx'),
        'user_version',
        ['emailAddress'],
        unique=False,
    )
    op.create_index(
        op.f('user_version_end_transaction_id_idx'),
        'user_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('user_version_is_email_verified_idx'),
        'user_version',
        ['is_email_verified'],
        unique=False,
    )
    op.create_index(
        op.f('user_version_is_nakama_idx'), 'user_version', ['is_nakama'], unique=False
    )
    op.create_index(
        op.f('user_version_is_phonenumber_verified_idx'),
        'user_version',
        ['is_phonenumber_verified'],
        unique=False,
    )
    op.create_index(
        op.f('user_version_operation_type_idx'),
        'user_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('user_version_phone_number_idx'),
        'user_version',
        ['phone_number'],
        unique=False,
    )
    op.create_index(
        op.f('user_version_transaction_id_idx'),
        'user_version',
        ['transaction_id'],
        unique=False,
    )
    op.create_table(
        'verification_version',
        sa.Column('created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('_code', sa.Unicode(length=6), autoincrement=False, nullable=True),
        sa.Column('expire_at', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('type', sa.Unicode(length=10), autoincrement=False, nullable=True),
        sa.Column('verified', sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column(
            'phone_number',
            sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            'email',
            sqlalchemy_utils.types.email.EmailType(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', 'transaction_id', name=op.f('verification_version_pkey')
        ),
    )
    op.create_index(
        op.f('verification_version_end_transaction_id_idx'),
        'verification_version',
        ['end_transaction_id'],
        unique=False,
    )
    op.create_index(
        op.f('verification_version_operation_type_idx'),
        'verification_version',
        ['operation_type'],
        unique=False,
    )
    op.create_index(
        op.f('verification_version_transaction_id_idx'),
        'verification_version',
        ['transaction_id'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f('verification_version_transaction_id_idx'), table_name='verification_version'
    )
    op.drop_index(
        op.f('verification_version_operation_type_idx'), table_name='verification_version'
    )
    op.drop_index(
        op.f('verification_version_end_transaction_id_idx'),
        table_name='verification_version',
    )
    op.drop_table('verification_version')
    op.drop_index(op.f('user_version_transaction_id_idx'), table_name='user_version')
    op.drop_index(op.f('user_version_phone_number_idx'), table_name='user_version')
    op.drop_index(op.f('user_version_operation_type_idx'), table_name='user_version')
    op.drop_index(
        op.f('user_version_is_phonenumber_verified_idx'), table_name='user_version'
    )
    op.drop_index(op.f('user_version_is_nakama_idx'), table_name='user_version')
    op.drop_index(op.f('user_version_is_email_verified_idx'), table_name='user_version')
    op.drop_index(op.f('user_version_end_transaction_id_idx'), table_name='user_version')
    op.drop_index(op.f('user_version_emailAddress_idx'), table_name='user_version')
    op.drop_table('user_version')
    op.drop_index(
        op.f('receipt_version_transaction_id_idx'), table_name='receipt_version'
    )
    op.drop_index(op.f('receipt_version_owner_id_idx'), table_name='receipt_version')
    op.drop_index(
        op.f('receipt_version_operation_type_idx'), table_name='receipt_version'
    )
    op.drop_index(
        op.f('receipt_version_end_transaction_id_idx'), table_name='receipt_version'
    )
    op.drop_index(op.f('receipt_version_code_idx'), table_name='receipt_version')
    op.drop_table('receipt_version')
    op.drop_index(op.f('payment_version_verified_idx'), table_name='payment_version')
    op.drop_index(
        op.f('payment_version_transaction_id_idx'), table_name='payment_version'
    )
    op.drop_index(op.f('payment_version_order_id_idx'), table_name='payment_version')
    op.drop_index(
        op.f('payment_version_operation_type_idx'), table_name='payment_version'
    )
    op.drop_index(op.f('payment_version_id_user_idx'), table_name='payment_version')
    op.drop_index(op.f('payment_version_id_need_idx'), table_name='payment_version')
    op.drop_index(
        op.f('payment_version_gateway_track_id_idx'), table_name='payment_version'
    )
    op.drop_index(
        op.f('payment_version_gateway_payment_id_idx'), table_name='payment_version'
    )
    op.drop_index(
        op.f('payment_version_end_transaction_id_idx'), table_name='payment_version'
    )
    op.drop_index(
        op.f('payment_version_cart_payment_id_idx'), table_name='payment_version'
    )
    op.drop_table('payment_version')
    op.drop_index(op.f('ngo_version_transaction_id_idx'), table_name='ngo_version')
    op.drop_index(op.f('ngo_version_operation_type_idx'), table_name='ngo_version')
    op.drop_index(op.f('ngo_version_end_transaction_id_idx'), table_name='ngo_version')
    op.drop_table('ngo_version')
    op.drop_index(op.f('need_version_type_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_transaction_id_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_status_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_operation_type_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_oncePurchased_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_isReported_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_isDeleted_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_isConfirmed_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_end_transaction_id_idx'), table_name='need_version')
    op.drop_index(op.f('need_version_child_id_idx'), table_name='need_version')
    op.drop_table('need_version')
    op.drop_index(
        op.f('need_receipt_version_transaction_id_idx'), table_name='need_receipt_version'
    )
    op.drop_index(
        op.f('need_receipt_version_sw_id_idx'), table_name='need_receipt_version'
    )
    op.drop_index(
        op.f('need_receipt_version_receipt_id_idx'), table_name='need_receipt_version'
    )
    op.drop_index(
        op.f('need_receipt_version_operation_type_idx'), table_name='need_receipt_version'
    )
    op.drop_index(
        op.f('need_receipt_version_need_id_idx'), table_name='need_receipt_version'
    )
    op.drop_index(
        op.f('need_receipt_version_end_transaction_id_idx'),
        table_name='need_receipt_version',
    )
    op.drop_table('need_receipt_version')
    op.drop_index(
        op.f('need_family_version_transaction_id_idx'), table_name='need_family_version'
    )
    op.drop_index(
        op.f('need_family_version_operation_type_idx'), table_name='need_family_version'
    )
    op.drop_index(
        op.f('need_family_version_isDeleted_idx'), table_name='need_family_version'
    )
    op.drop_index(
        op.f('need_family_version_id_user_idx'), table_name='need_family_version'
    )
    op.drop_index(
        op.f('need_family_version_id_need_idx'), table_name='need_family_version'
    )
    op.drop_index(
        op.f('need_family_version_id_family_idx'), table_name='need_family_version'
    )
    op.drop_index(
        op.f('need_family_version_end_transaction_id_idx'),
        table_name='need_family_version',
    )
    op.drop_table('need_family_version')
    op.drop_index(
        op.f('invitations_version_transaction_id_idx'), table_name='invitations_version'
    )
    op.drop_index(op.f('invitations_version_token_idx'), table_name='invitations_version')
    op.drop_index(
        op.f('invitations_version_operation_type_idx'), table_name='invitations_version'
    )
    op.drop_index(
        op.f('invitations_version_inviter_id_idx'), table_name='invitations_version'
    )
    op.drop_index(
        op.f('invitations_version_family_id_idx'), table_name='invitations_version'
    )
    op.drop_index(
        op.f('invitations_version_end_transaction_id_idx'),
        table_name='invitations_version',
    )
    op.drop_table('invitations_version')
    op.drop_index(op.f('family_version_transaction_id_idx'), table_name='family_version')
    op.drop_index(op.f('family_version_operation_type_idx'), table_name='family_version')
    op.drop_index(
        op.f('family_version_end_transaction_id_idx'), table_name='family_version'
    )
    op.drop_table('family_version')
    op.drop_index(
        op.f('cart_payments_version_transaction_id_idx'),
        table_name='cart_payments_version',
    )
    op.drop_index(
        op.f('cart_payments_version_operation_type_idx'),
        table_name='cart_payments_version',
    )
    op.drop_index(
        op.f('cart_payments_version_gateway_track_id_idx'),
        table_name='cart_payments_version',
    )
    op.drop_index(
        op.f('cart_payments_version_gateway_payment_id_idx'),
        table_name='cart_payments_version',
    )
    op.drop_index(
        op.f('cart_payments_version_end_transaction_id_idx'),
        table_name='cart_payments_version',
    )
    op.drop_index(
        op.f('cart_payments_version_cart_id_idx'), table_name='cart_payments_version'
    )
    op.drop_table('cart_payments_version')
    # ### end Alembic commands ###

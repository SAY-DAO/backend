version: '3.6'

services:
  redis:
    image: redis:6
    volumes:
      - redis_volume:/data
  db:
    image: postgres:12
    environment:
      POSTGRES_DB: say
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/${STACK_NAME}-postgres-password
    secrets:
      - postgres-password
    volumes:
      - postgres_volume:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    volumes:
      - rabbitmq_data_volume:/var/lib/rabbitmq/
      - rabbitmq_log_volume:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER:  $SAY_RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS:  /run/secrets/${STACK_NAME}-rabbitmq-password
      RABBITMQ_DEFAULT_VHOST: $SAY_RABBITMQ_VHOST
    secrets:
      - rabbitmq-password
  backend: &backend
    image: $CONTAINER_IMAGE
    configs:
      - source: ${STACK_NAME}.env
        target: .env
    secrets:
      - source: ${STACK_NAME}-postgres-password
        target: postgres-password
      - source: ${STACK_NAME}-rabbitmq-password
        target: rabbitmq-password
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
    networks:
      - traefik-public
      - default
    expose:
      - 5000
    volumes:
      - backend_volume:/app/data
    depends_on:
      - redis
      - db
      - rabbitmq
  worker:
    <<: *backend
    command: celery -A say.api.app.celery worker --concurrency 2 --loglevel=WARNING -B -S redbeat.RedBeatScheduler
volumes:
  redis_volume:
  postgres_volume:
  rabbitmq_data_volume:
  rabbitmq_log_volume:
  backend_volume:
networks:
  traefik-public:
    external: true
configs:
  backned-configs:
    name: ${STACK_NAME}.env
    external: true
secrets:
  postgres-password:
    name: ${STACK_NAME}-postgres-password
    external: true
  rabbitmq-password:
    name: ${STACK_NAME}-rabbitmq-password
    external: true